1035 -> Uncrossed Lines
Problem link: https://leetcode.com/problems/uncrossed-lines/description/

Here I will be first discussing the brute force approach and why it fails and how to optimize the time complexity using 2 approaches:
  1) Top-down DP (Recursion + Memoization)
  2) Bottom-up DP (Tabulation)
  
This problem is nothing but a slight modification of the Longest Common Subsequence problem where the number of uncrossing lines represent the longest common subsequence between the two arrays.
Longest Common Subsequence: https://leetcode.com/problems/longest-common-subsequence/description/

Brute force approach:

TC: Runs in exponential time since we are checking each and every possibility.
SC: O(m + n) for the call stack.

1) Top-down DP (Recursion + Memoization): 

TC: Runs in O(m * n)
SC: O(m * n) for the extra 2D array space

2) Bottom-up DP (Tabulation):

TC: Runs in O(m * n)
SC: O(m * n) for the extra 2D array space
